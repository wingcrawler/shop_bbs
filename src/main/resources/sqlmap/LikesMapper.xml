<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.sqe.shop.mapper.LikesMapper">

<resultMap type="com.sqe.shop.model.Likes" id="LikesBaseMapper">
	<id property="threadId" column="thread_id" />
	<id property="newsId" column="news_id" />
	<id property="productId" column="product_id" />
	<id property="createTime" column="create_time" />
	<id property="shopId" column="shop_id" />
	<id property="id" column="id" />
	<id property="userId" column="user_id" />
</resultMap>  

<insert id="insert">
	<selectKey resultType="long" keyProperty="id">  
   		select LAST_INSERT_ID()
   	</selectKey>
	insert into likes
	(thread_id,news_id,product_id,create_time,shop_id,user_id)
	values
	(#{threadId},#{newsId},#{productId},#{createTime},#{shopId},#{userId})
</insert>

<update id="update">
	UPDATE likes 
	<set>
			<if test="threadId != null">  
	        	thread_id=#{threadId},
	    	</if>
			<if test="newsId != null">  
	        	news_id=#{newsId},
	    	</if>
			<if test="productId != null">  
	        	product_id=#{productId},
	    	</if>
			<if test="createTime != null">  
	        	create_time=#{createTime},
	    	</if>
			<if test="shopId != null">  
	        	shop_id=#{shopId},
	    	</if>
			<if test="userId != null">  
	        	user_id=#{userId},
	    	</if>
	</set>   
    WHERE id=#{id}
</update>

<delete id="delete">
	delete from likes where id=#{id}
</delete>

<select id="getById" resultMap="LikesBaseMapper">
	SELECT * FROM likes WHERE id=#{id} 
</select>

<select id="countByParm" resultType="integer">
	select count(*) from likes  where 1=1 
			<if test="parm.threadId != null and parm.threadId != '' ">
		     	and thread_id = #{parm.threadId}
		   	</if>
			<if test="parm.newsId != null and parm.newsId != '' ">
		     	and news_id = #{parm.newsId}
		   	</if>
			<if test="parm.productId != null and parm.productId != '' ">
		     	and product_id = #{parm.productId}
		   	</if>
			<if test="parm.createTime != null and parm.createTime != '' ">
		     	and create_time = #{parm.createTime}
		   	</if>
			<if test="parm.shopId != null and parm.shopId != '' ">
		     	and shop_id = #{parm.shopId}
		   	</if>
			<if test="parm.userId != null and parm.userId != '' ">
		     	and user_id = #{parm.userId}
		   	</if>
</select>

<select id="getBeanListByParm" resultMap="LikesBaseMapper">
	select * from likes where 1=1 
			<if test="parm.threadId != null and parm.threadId != '' ">
		     	and thread_id = #{parm.threadId}
		   	</if>
			<if test="parm.newsId != null and parm.newsId != '' ">
		     	and news_id = #{parm.newsId}
		   	</if>
			<if test="parm.productId != null and parm.productId != '' ">
		     	and product_id = #{parm.productId}
		   	</if>
			<if test="parm.createTime != null and parm.createTime != '' ">
		     	and create_time = #{parm.createTime}
		   	</if>
			<if test="parm.shopId != null and parm.shopId != '' ">
		     	and shop_id = #{parm.shopId}
		   	</if>
			<if test="parm.userId != null and parm.userId != '' ">
		     	and user_id = #{parm.userId}
		   	</if>
		<if test="parm.orderby != null">
	   		order by ${parm.orderby}
	   	</if>
		<if test="parm.start != null and parm.start != '' ">
			limit #{parm.start},#{parm.limit}
		</if>
</select>


<select id="getMapListByParm" parameterType="HashMap" resultType="HashMap">
	select * from likes where 1=1
		<if test="parm.orderby != null and parm.orderby != '' ">
	   		order by ${parm.orderby}
	   	</if>
		<if test="parm.start != null and parm.start != '' ">
			limit #{parm.start},#{parm.limit}
		</if>
</select>


</mapper>